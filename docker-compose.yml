services:
  form-restapi-server:
    image: form-restapi-server:0.0.1-SNAPSHOT
    container_name: form-restapi-server
    deploy:
      resources:
        limits:
          memory: 1024M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://form-restapi-server:8002/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8002
      PG_DB_HOST: postgres
      PG_DB_PORT: 5432
      PG_DB_USERNAME: postgres
      PG_DB_PASS: root
      PG_DB_NAME: dip
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_NAME: minioadmin
      MINIO_CERTIFICATION: "true"
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    restart: unless-stopped

  teacher-server:
    image: teacher-server:0.0.1-SNAPSHOT
    container_name: teacher-server
    deploy:
      resources:
        limits:
          memory: 1024M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://teacher-server:8003/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8003
      PG_DB_HOST: postgres
      PG_DB_PORT: 5432
      PG_DB_USERNAME: postgres
      PG_DB_PASS: root
      PG_DB_NAME: dip
    ports:
      - "8003:8003"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  email-restapi-server:
    image: email-restapi-server:0.0.1-SNAPSHOT
    container_name: email-restapi-server
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://email-restapi-server:8004/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8004
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_MAIL_HOST: smtp.example.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: your_email@example.com
      SPRING_MAIL_PASSWORD: your_password
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
    ports:
      - "8004:8004"
    depends_on:
      kafka:
        condition: service_started
    restart: unless-stopped

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper
    restart: unless-stopped

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    restart: unless-stopped

  postgres:
    image: postgres:13
    container_name: postgres
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/script/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d dip -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    container_name: minio
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_data:
